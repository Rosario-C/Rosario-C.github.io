{"version":3,"sources":["imagenes/FreeCodeCamp_logo.svg.png","componentes/Botones.js","componentes/Pantalla.js","componentes/BotonClear.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Boton","props","valor","react_default","a","createElement","className","concat","children","isNaN","onClick","manejarClick","Pantalla","_ref","input","ClearBoton","manejarClear","App","_useState","useState","_useState2","Object","slicedToArray","setInput","agregarInput","src","FreeCodeCampLogo","alt","componentes_Pantalla","componentes_Botones","evaluate","alert","componentes_BotonClear","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.c9146448.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FreeCodeCamp_logo.svg.cb3ccfb1.png\";","import React from 'react';\r\nimport '../calculadoraEstilos/Botones.css'\r\n\r\n//todo lo que esté dentro de la etiqueta se va aconsiderar como children\r\nfunction Boton(props){\r\n  \r\n    const isOperador = valor => { //va a retornar v o pero va aestar definido por lo siguiente\r\n        return isNaN(valor) && (valor !== '.') && (valor !== '=');\r\n        //si valor NO es nu num, no es un '.' y no es un '=' se va a retirnar verdadero y va a ser un orepardor\r\n    }\r\n\r\n    return(\r\n        <button className={`botonContenedor ${isOperador(props.children) ? 'operador' : null}`} \r\n        onClick={() => props.manejarClick(props.children)}> \r\n            {props.children} \r\n        </button>\r\n    );\r\n}\r\n//hago mi eventlistener. lo agrego en la jsx y le paso 'manejarClick' porque es una funcion y hace alusion a agregar input. le paso como pará metro el children porque es el valor de lo que apreti en los botones \r\n//entonces hago una funcion anónima que se llama cuando hago click, sino no pasa nada porque no sabe el div que tiene que retornar eso que le pido\r\nexport default Boton;","import React from 'react';\r\nimport '../calculadoraEstilos/Pantalla.css'\r\n\r\nconst Pantalla = ({ input }) =>( //definimos un componente como funcion flecha\r\n    <div className='input'>      \r\n        {input}\r\n    </div> \r\n);\r\nexport default Pantalla;","import React from 'react';\r\nimport '../calculadoraEstilos/BotonClear.css'\r\n\r\nconst ClearBoton = (props) =>(\r\n    <button className='clearBoton' onClick={() => props.manejarClear(props.children)}>\r\n        {props.children}\r\n    </button>\r\n);\r\nexport default ClearBoton;","import './App.css';\nimport FreeCodeCampLogo from './imagenes/FreeCodeCamp_logo.svg.png' \nimport Boton from './componentes/Botones';\nimport Pantalla from './componentes/Pantalla';\nimport ClearBoton from './componentes/BotonClear';\nimport React, { useState } from 'react';\nimport { evaluate } from 'mathjs'; \n//es una librearia de matematicas para react y node js\n\nfunction App() {\n\n    const [input, setInput] = useState('');\n\n    const agregarInput = valor =>{\n      setInput(input + valor);\n    };\n    const calcularResultado = () =>{\n      if(input){ //puedo ponerlo solo porque es un valo thrulu, es decir que si la cadena de caracteres tiene valor, es true, pero si está vacia es falsa\n        setInput(evaluate(input));\n      }else{\n        alert(\"Por favor ingrese un valor para realizar cálculos\");\n      }\n    };\n\n  return (\n    <div className='App'>\n      <div className='freeCodeCampLogo_contenedor'>\n        <img\n          src={FreeCodeCampLogo}\n          className='freeCodeCampLogo'\n          alt='Logo freeCodeCamp'\n        />\n      </div>\n      <div className='contenedorCalculadora'>\n        <Pantalla input={input}/>\n          <div className='fila'>\n            <Boton  manejarClick={agregarInput}>1</Boton> \n            <Boton  manejarClick={agregarInput}>2</Boton>\n            <Boton  manejarClick={agregarInput}>3</Boton>\n            <Boton  manejarClick={agregarInput}>+</Boton>\n          </div>\n          <div className='fila'>\n            <Boton  manejarClick={agregarInput}>4</Boton>\n            <Boton  manejarClick={agregarInput}>5</Boton>\n            <Boton  manejarClick={agregarInput}>6</Boton>\n            <Boton  manejarClick={agregarInput}>-</Boton>\n          </div>\n          <div className='fila'>\n            <Boton  manejarClick={agregarInput}>7</Boton>\n            <Boton  manejarClick={agregarInput}>8</Boton>\n            <Boton  manejarClick={agregarInput}>9</Boton>\n            <Boton  manejarClick={agregarInput}>*</Boton>\n\n          </div>\n          <div className='fila'>\n            <Boton  manejarClick={calcularResultado}>=</Boton>\n            <Boton  manejarClick={agregarInput}>0</Boton>\n            <Boton  manejarClick={agregarInput}>.</Boton>\n            <Boton  manejarClick={agregarInput}>/</Boton>\n          </div>\n          <div className='fila'>\n            <ClearBoton manejarClear={() => setInput('')}>\n              Clear\n            </ClearBoton>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}